/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.6
 * Generated at: 2016-11-08 23:32:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.3.RELEASE.jar", Long.valueOf(1477501503367L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1477501505027L));
    _jspx_dependants.put("jar:file:/C:/Users/APerez/Documents/workspace-for-sts/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/spring-mvc/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("jar:file:/C:/Users/APerez/Documents/workspace-for-sts/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/spring-mvc/WEB-INF/lib/spring-webmvc-4.3.3.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1474314770000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write(" <head>\r\n");
      out.write(" \t<title>Spring MVC - Ajax</title>\r\n");
      out.write(" \t<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write(" \t<style>\r\n");
      out.write("      body { \r\n");
      out.write("      \tbackground-color: #eee; \r\n");
      out.write("      \tfont: helvetica; \r\n");
      out.write("      }\r\n");
      out.write("      #container { \r\n");
      out.write("      \twidth: 500px; \r\n");
      out.write("      \tbackground-color: #fff; \r\n");
      out.write("      \tmargin: 30px auto; \r\n");
      out.write("      \tpadding: 30px; \r\n");
      out.write("      \tborder-radius: 5px; \r\n");
      out.write("      \tbox-shadow: 5px; \r\n");
      out.write("      }\r\n");
      out.write("      .green { \r\n");
      out.write("      \tfont-weight: bold; \r\n");
      out.write("      \tcolor: green; \r\n");
      out.write("      }\r\n");
      out.write("      .message { \r\n");
      out.write("      \tmargin-bottom: 10px; \r\n");
      out.write("      }\r\n");
      out.write("      label { \r\n");
      out.write("      \twidth:70px; \r\n");
      out.write("      \tdisplay:inline-block;\r\n");
      out.write("      }\r\n");
      out.write("      .hide { \r\n");
      out.write("      \tdisplay: none; \r\n");
      out.write("      }\r\n");
      out.write("      .error { \r\n");
      out.write("      \tcolor: red; \r\n");
      out.write("      \tfont-size: 0.8em; \r\n");
      out.write("      }\r\n");
      out.write("    </style>\r\n");
      out.write(" </head>\r\n");
      out.write(" <body>\r\n");
      out.write("   \t<div id=\"container\">\r\n");
      out.write("   \t\t<h1>Person Page</h1>\r\n");
      out.write("    \t<p>This page demonstrates Spring MVC's powerful Ajax functionality. Retrieve a\r\n");
      out.write("    \t   random person, retrieve a person by ID, or save a new person, all without page reload.\r\n");
      out.write("    \t</p>\r\n");
      out.write("     \t\r\n");
      out.write("     \t<h2>Random Person Generator</h2>\r\n");
      out.write("    \t<input type=\"submit\" id=\"randomPerson\" value=\"Get Random Person\" /><br/><br/>\r\n");
      out.write("    \t<div id=\"personResponse\"> </div>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<hr/>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<h2>Get By ID</h2>\r\n");
      out.write("    \t<form id=\"idForm\">\r\n");
      out.write("      \t\t<div class=\"error hide\" id=\"idError\">Please enter a valid ID in range 0-3</div>\r\n");
      out.write("      \t\t<label for=\"personId\">ID (0-3): </label><input name=\"id\" id=\"personId\" value=\"0\" type=\"number\" />\r\n");
      out.write("      \t\t<input type=\"submit\" value=\"Get Person By ID\" /> <br /><br/>\r\n");
      out.write("      \t\t<div id=\"personIdResponse\"> </div>\r\n");
      out.write("    \t</form>\r\n");
      out.write("     \r\n");
      out.write("    \t<hr/>\r\n");
      out.write("    \t\r\n");
      out.write("    \t<h2>Submit new Person</h2>\r\n");
      out.write("    \t<form id=\"newPersonForm\">\r\n");
      out.write("      \t\t<label for=\"nameInput\">Name: </label>\r\n");
      out.write("      \t\t<input type=\"text\" name=\"name\" id=\"nameInput\" />\r\n");
      out.write("      \t\t<br/>\r\n");
      out.write("       \r\n");
      out.write("      \t\t<label for=\"ageInput\">Age: </label>\r\n");
      out.write("      \t\t<input type=\"text\" name=\"age\" id=\"ageInput\" />\r\n");
      out.write("      \t\t<br/>\r\n");
      out.write("      \t\t\r\n");
      out.write("      \t\t<input type=\"submit\" value=\"Save Person\" /><br/><br/>\r\n");
      out.write("      \t\t<div id=\"personFormResponse\" class=\"green\"> </div>\r\n");
      out.write("    \t</form>\r\n");
      out.write("   \t</div>\r\n");
      out.write("   \t\r\n");
      out.write("   \t<script type=\"text/javascript\">\r\n");
      out.write("   \t\t$(document).ready(function() {\r\n");
      out.write("   \t\t\t// Random Person AJAX Request\r\n");
      out.write("   \t      \t$('#randomPerson').click(function() {\r\n");
      out.write("   \t      \t\tconsole.log(\"Clicked random\");\r\n");
      out.write("   \t        \t$.getJSON('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/person/random', function(person) {\r\n");
      out.write("   \t          \t\t$('#personResponse').text(person.name + ', age ' + person.age);\r\n");
      out.write("   \t        \t});\r\n");
      out.write("   \t      \t});\r\n");
      out.write("   \t\t\t\r\n");
      out.write("   \t  \t\t// Request Person by ID AJAX\r\n");
      out.write("   \t      \t$('#idForm').submit(function(e) {\r\n");
      out.write("   \t        \tvar personId = +$('#personId').val();\r\n");
      out.write("   \t        \tif(!validatePersonId(personId)) \r\n");
      out.write("   \t          \t\treturn false;\r\n");
      out.write("   \t        \t$.get('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/person/' + personId, function(person) {\r\n");
      out.write("   \t          \t\t$('#personIdResponse').text(person.name + ', age ' + person.age);\r\n");
      out.write("   \t        \t});\r\n");
      out.write("   \t        \te.preventDefault(); // prevent actual form submit\r\n");
      out.write("   \t      \t});\r\n");
      out.write("   \t  \t\t\r\n");
      out.write("   \t  \t\t// Save Person AJAX Form Submit\r\n");
      out.write("   \t      \t$('#newPersonForm').submit(function(e) {\r\n");
      out.write("   \t        \t// will pass the form data using the jQuery serialize function\r\n");
      out.write("   \t        \tconsole.log($(this).serialize());\r\n");
      out.write("   \t        \t$.post('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/person', $(this).serialize(), function(response) {\r\n");
      out.write("   \t          \t\t$('#personFormResponse').text(response);\r\n");
      out.write("   \t        \t});\r\n");
      out.write("   \t         \r\n");
      out.write("   \t        \te.preventDefault(); // prevent actual form submit and page reload\r\n");
      out.write("   \t      \t});\r\n");
      out.write("   \t\t});\r\n");
      out.write("   \t\t\r\n");
      out.write("   \t\tfunction validatePersonId(personId) {\r\n");
      out.write("   \t    \tconsole.log(personId);\r\n");
      out.write("   \t      \tif(personId === undefined || personId < 0 || personId > 3) {\r\n");
      out.write("   \t        \t$('#idError').show();\r\n");
      out.write("   \t        \treturn false;\r\n");
      out.write("   \t      \t}\r\n");
      out.write("   \t      \telse {\r\n");
      out.write("   \t        \t$('#idError').hide();\r\n");
      out.write("   \t        \treturn true;\r\n");
      out.write("   \t      \t}\r\n");
      out.write("   \t    }\r\n");
      out.write("   \t</script>\r\n");
      out.write(" </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
