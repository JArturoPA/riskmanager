package com.analitica.web.controller;

import java.text.ParseException;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.MatrixVariable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.analitica.web.domain.CurvaDeMercado;
import com.analitica.web.domain.FormVolatilidad;
import com.analitica.web.domain.Graphic;
import com.analitica.web.domain.NodoDeCurva;
import com.analitica.web.service.CurvaDeMercadoService;
import com.analitica.web.service.GraficaService;
import com.analitica.web.service.NodoDeCurvaService;
import com.analitica.web.service.ProveedorDePreciosService;

@Controller
public class HomeController {
	@Autowired
	private ProveedorDePreciosService proveedor;
	@Autowired
	private CurvaDeMercadoService curva;
	@Autowired
	private NodoDeCurvaService nodo;
	@Autowired
	private GraficaService grafica;
	
	@RequestMapping("/")
	public String welcome(Model model){
		model.addAttribute("proveedores", proveedor.list());
		
		return "welcome";
	}
	
	@RequestMapping(value = "/curvas/{proveedorId}", method = RequestMethod.GET)
	public @ResponseBody List<CurvaDeMercado> getCurvasById(@PathVariable(value = "proveedorId") int proveedorId){
		return curva.getById(proveedorId);
	}
	
	@RequestMapping(value = "/nodos/{ByCriteria}", method = RequestMethod.GET)
	public @ResponseBody List<NodoDeCurva> getNodosByFilter(
			@MatrixVariable(pathVar = "ByCriteria") Map<String,List<String>> filterParams){
		return nodo.getByFilter(filterParams);
	}
	
	@RequestMapping(value = "/graficas", method = RequestMethod.POST)
	public @ResponseBody List<Graphic> getGraficas(@RequestBody FormVolatilidad jsonForm) throws DataAccessException, ParseException{
		return grafica.getGraficas(jsonForm);
	}
}
